name: Deploy Infra using Terraform
on:
  pull_request:
    branches:
      - main
jobs:
  deploy-infra:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      TF_VAR_key_name: ${{ secrets.TF_VAR_key_name }}
    steps:
      - name: Checkout Repo Content
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Initialize Terraform
        run: terraform init
        working-directory: infra

      - name: Check Format
        run: terraform fmt
        working-directory: infra

      - name: Validate
        run: terraform validate
        working-directory: infra

      - name: Plan
        run: terraform plan -out=tfplan
        working-directory: infra

      - name: Apply
        run: terraform apply -auto-approve tfplan
        working-directory: infra

      - name: Export EC2 Instance ID from output
        id: tf-output
        run: |
          echo "EC2_INSTANCE_ID=$(terrform output -raw ec2_instance_id)" >> $GITHUB_OUTPUT
        working-directory: infra

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY}}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Linux Site
        run: |
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --comment "Setup" \
            --targets "Key=instanceIds,Values=${{ steps.tf-output.outputs.EC2_INSTANCE_ID}}" \
            --parameters commands=["$(cat app-files/setup.sh)"] \
            --region ${{ env.AWS_REGION}}
